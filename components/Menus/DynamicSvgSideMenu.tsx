import React from "react";

interface DynamicSvgProps {
  isActive: boolean;
  height?: number;
  className?: string;
  title?: string;
}

const DynamicSvg: React.FC<DynamicSvgProps> = ({
  isActive,
  height = 12,
  className,
  title,
}) => {
  return (
    <svg
      width={height}
      height={height}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      role="img"
      aria-hidden="true"
      className={`${className} transition-colors duration-200`}
      fill={
        !title?.includes("Stock")
          ? isActive
            ? "#2159AD"
            : "currentColor"
          : "none"
      }
      stroke={
        title?.includes("Stock")
          ? isActive
            ? "#2159AD"
            : "currentColor"
          : "none"
      }
    >
      {title && <title>{title}</title>}
      {title?.includes("Dashboard") ? (
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M2.825 9H6.205C6.326 9 6.525 9 6.707 9.016C6.932 9.036 7.316 9.092 7.722 9.319C8.12443 9.54432 8.45668 9.87657 8.682 10.279C8.908 10.684 8.964 11.068 8.984 11.293C9.001 11.476 9 11.674 9 11.795V17.205C9 17.326 9 17.525 8.984 17.707C8.964 17.932 8.909 18.316 8.681 18.722C8.45568 19.1244 8.12343 19.4567 7.721 19.682C7.40842 19.8539 7.06267 19.9568 6.707 19.984C6.524 20 6.326 20 6.205 20H2.795C2.675 20 2.475 20 2.293 19.984C1.93725 19.9565 1.5915 19.8532 1.279 19.681C0.876574 19.4557 0.544321 19.1234 0.319 18.721C0.146796 18.4085 0.0434817 18.0627 0.016 17.707C3.1665e-08 17.524 0 17.326 0 17.205V11.795C0 11.675 3.1665e-08 11.475 0.016 11.293C0.036 11.068 0.092 10.684 0.319 10.279C0.544321 9.87657 0.876574 9.54432 1.279 9.319C1.5915 9.1468 1.93725 9.04348 2.293 9.016C2.476 9 2.674 9 2.795 9H2.825ZM2.064 11.256C2 11.37 2 11.52 2 11.826V17.176C2 17.479 2 17.631 2.064 17.744C2.10906 17.8245 2.17551 17.8909 2.256 17.936C2.37 18 2.521 18 2.825 18H6.175C6.479 18 6.631 18 6.745 17.936C6.82512 17.8908 6.89121 17.8244 6.936 17.744C7 17.631 7 17.48 7 17.175V11.825C7 11.521 7 11.37 6.936 11.255C6.89079 11.1749 6.82435 11.1088 6.744 11.064C6.631 11 6.48 11 6.175 11H2.825C2.521 11 2.37 11 2.255 11.064C2.17488 11.1092 2.10879 11.1756 2.064 11.256ZM2.825 0H6.205C6.326 0 6.525 3.1665e-08 6.707 0.016C6.932 0.036 7.316 0.092 7.722 0.319C8.12443 0.544321 8.45668 0.876574 8.682 1.279C8.908 1.684 8.964 2.068 8.984 2.293C9.001 2.476 9 2.674 9 2.795V5.205C9 5.326 9 5.525 8.984 5.707C8.964 5.932 8.909 6.316 8.681 6.722C8.45568 7.12443 8.12343 7.45668 7.721 7.682C7.40842 7.85386 7.06267 7.95683 6.707 7.984C6.524 8.001 6.326 8 6.205 8H2.795C2.675 8 2.475 8 2.293 7.984C1.93725 7.95652 1.5915 7.8532 1.279 7.681C0.876574 7.45568 0.544321 7.12343 0.319 6.721C0.146796 6.4085 0.0434817 6.06275 0.016 5.707C3.1665e-08 5.524 0 5.326 0 5.205V2.795C0 2.675 3.1665e-08 2.475 0.016 2.293C0.036 2.068 0.092 1.684 0.319 1.279C0.544321 0.876574 0.876574 0.544321 1.279 0.319C1.5915 0.146796 1.93725 0.0434817 2.293 0.016C2.476 3.1665e-08 2.674 0 2.795 0H2.825ZM2.064 2.256C2 2.37 2 2.52 2 2.825V5.175C2 5.479 2 5.631 2.064 5.745C2.10921 5.82512 2.17565 5.89121 2.256 5.936C2.37 6 2.52 6 2.825 6H6.175C6.479 6 6.631 6 6.745 5.936C6.82512 5.89079 6.89121 5.82435 6.936 5.744C7 5.631 7 5.48 7 5.175V2.825C7 2.521 7 2.37 6.936 2.255C6.89079 2.17488 6.82435 2.10879 6.744 2.064C6.631 2 6.48 2 6.175 2H2.825C2.521 2 2.37 2 2.255 2.064C2.17488 2.10921 2.10879 2.17565 2.064 2.256ZM13.825 11H17.205C17.326 11 17.525 11 17.707 10.984C17.932 10.964 18.316 10.909 18.722 10.681C19.1244 10.4557 19.4567 10.1234 19.682 9.721C19.909 9.316 19.964 8.932 19.984 8.707C20 8.524 20 8.326 20 8.205V2.795C20 2.675 20 2.475 19.984 2.293C19.9565 1.93725 19.8532 1.5915 19.681 1.279C19.4557 0.876574 19.1234 0.544321 18.721 0.319C18.4085 0.146796 18.0627 0.0434817 17.707 0.016C17.524 3.1665e-08 17.326 0 17.205 0H13.795C13.675 0 13.475 3.1665e-08 13.293 0.016C13.068 0.036 12.684 0.092 12.279 0.319C11.8766 0.544321 11.5443 0.876574 11.319 1.279C11.1468 1.5915 11.0435 1.93725 11.016 2.293C11 2.476 11 2.674 11 2.795V8.205C11 8.326 11 8.525 11.016 8.707C11.036 8.932 11.092 9.316 11.319 9.722C11.5443 10.1244 11.8766 10.4567 12.279 10.682C12.684 10.908 13.068 10.964 13.293 10.984C13.476 11.001 13.674 11 13.795 11H13.825ZM13.064 8.744C13 8.63 13 8.48 13 8.175V2.825C13 2.521 13 2.37 13.064 2.255C13.1092 2.17488 13.1756 2.10879 13.256 2.064C13.37 2 13.52 2 13.826 2H17.176C17.479 2 17.631 2 17.744 2.064C17.8245 2.10906 17.8909 2.17551 17.936 2.256C18 2.37 18 2.521 18 2.825V8.175C18 8.479 18 8.63 17.936 8.745C17.8908 8.82512 17.8244 8.89121 17.744 8.936C17.631 9 17.479 9 17.175 9H13.825C13.521 9 13.37 9 13.255 8.936C13.1749 8.89079 13.1088 8.82435 13.064 8.744ZM13.825 20H17.205C17.326 20 17.525 20 17.707 19.984C17.932 19.964 18.316 19.908 18.722 19.681C19.1244 19.4557 19.4567 19.1234 19.682 18.721C19.909 18.316 19.964 17.932 19.984 17.707C20 17.524 20 17.326 20 17.205V14.795C20 14.675 20 14.475 19.984 14.293C19.9565 13.9372 19.8532 13.5915 19.681 13.279C19.4557 12.8766 19.1234 12.5443 18.721 12.319C18.4085 12.1468 18.0627 12.0435 17.707 12.016C17.524 12 17.326 12 17.205 12H13.795C13.675 12 13.475 12 13.293 12.016C13.068 12.036 12.684 12.092 12.279 12.319C11.8766 12.5443 11.5443 12.8766 11.319 13.279C11.1468 13.5915 11.0435 13.9372 11.016 14.293C11 14.476 11 14.674 11 14.795V17.205C11 17.326 11 17.525 11.016 17.707C11.036 17.932 11.092 18.316 11.319 18.722C11.5443 19.1244 11.8766 19.4567 12.279 19.682C12.684 19.909 13.068 19.964 13.293 19.984C13.476 20 13.674 20 13.795 20H13.825ZM13.064 17.744C13 17.631 13 17.48 13 17.175V14.825C13 14.521 13 14.37 13.064 14.255C13.1092 14.1749 13.1756 14.1088 13.256 14.064C13.37 14 13.521 14 13.826 14H17.176C17.479 14 17.631 14 17.744 14.064C17.824 14.109 17.891 14.175 17.936 14.256C18 14.37 18 14.521 18 14.826V17.176C18 17.479 18 17.631 17.936 17.744C17.8909 17.8245 17.8245 17.8909 17.744 17.936C17.631 18 17.479 18 17.175 18H13.825C13.521 18 13.37 18 13.255 17.936C13.1749 17.8908 13.1088 17.8244 13.064 17.744Z"
          // fill="#1E92E4"
          className="group-hover:fill-black"
        />
      ) : title?.includes("Stock") ? (
        <>
          <path
            d="M1.5 11C1.5 6.522 1.5 4.282 2.891 2.891C4.282 1.5 6.521 1.5 11 1.5C15.478 1.5 17.718 1.5 19.109 2.891C20.5 4.282 20.5 6.521 20.5 11C20.5 15.478 20.5 17.718 19.109 19.109C17.718 20.5 15.479 20.5 11 20.5C6.522 20.5 4.282 20.5 2.891 19.109C1.5 17.718 1.5 15.479 1.5 11Z"
            // stroke="#393939"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M1.5 13.5H2.039C2.511 13.5 2.747 13.5 2.953 13.401C3.158 13.303 3.305 13.118 3.6 12.749L5 11L6.5 13.5L8 10L10.5 15L14 8L16 11.5L17.5 10L18.945 12.168C19.197 12.546 19.323 12.735 19.507 12.849C19.5437 12.8717 19.5817 12.892 19.621 12.91C19.819 13 20.046 13 20.5 13M14 1.5V4.5M14 20.5V13.5"
            // stroke="#393939"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M14 9C14.5523 9 15 8.55228 15 8C15 7.44772 14.5523 7 14 7C13.4477 7 13 7.44772 13 8C13 8.55228 13.4477 9 14 9Z"
            // stroke="#393939"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </>
      ) : title?.includes("Management") ? (
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M0 2C0 1.46957 0.210714 0.960859 0.585786 0.585786C0.960859 0.210714 1.46957 0 2 0H14C14.5304 0 15.0391 0.210714 15.4142 0.585786C15.7893 0.960859 16 1.46957 16 2V18C16 18.5304 15.7893 19.0391 15.4142 19.4142C15.0391 19.7893 14.5304 20 14 20H2C1.46957 20 0.960859 19.7893 0.585786 19.4142C0.210714 19.0391 0 18.5304 0 18V2ZM14 2H2V18H14V2ZM7.548 4.763C7.73547 4.95053 7.84079 5.20484 7.84079 5.47C7.84079 5.73516 7.73547 5.98947 7.548 6.177L5.603 8.12C5.36861 8.35419 5.05083 8.48573 4.7195 8.48573C4.38817 8.48573 4.07039 8.35419 3.836 8.12L2.952 7.236C2.85649 7.14375 2.78031 7.03341 2.7279 6.9114C2.67549 6.7894 2.6479 6.65818 2.64675 6.5254C2.6456 6.39262 2.6709 6.26094 2.72118 6.13805C2.77146 6.01515 2.84571 5.9035 2.93961 5.80961C3.0335 5.71571 3.14515 5.64146 3.26805 5.59118C3.39094 5.5409 3.52262 5.5156 3.6554 5.51675C3.78818 5.5179 3.9194 5.54549 4.0414 5.5979C4.16341 5.65031 4.27375 5.72649 4.366 5.822L4.72 6.176L6.134 4.762C6.32153 4.57453 6.57584 4.46921 6.841 4.46921C7.10616 4.46921 7.36047 4.57553 7.548 4.763ZM9 7C9 6.73478 9.10536 6.48043 9.29289 6.29289C9.48043 6.10536 9.73478 6 10 6H12C12.2652 6 12.5196 6.10536 12.7071 6.29289C12.8946 6.48043 13 6.73478 13 7C13 7.26522 12.8946 7.51957 12.7071 7.70711C12.5196 7.89464 12.2652 8 12 8H10C9.73478 8 9.48043 7.89464 9.29289 7.70711C9.10536 7.51957 9 7.26522 9 7ZM3 11.5C3 11.1022 3.15804 10.7206 3.43934 10.4393C3.72064 10.158 4.10218 10 4.5 10H6.5C6.89782 10 7.27936 10.158 7.56066 10.4393C7.84196 10.7206 8 11.1022 8 11.5V13.5C8 13.8978 7.84196 14.2794 7.56066 14.5607C7.27936 14.842 6.89782 15 6.5 15H4.5C4.10218 15 3.72064 14.842 3.43934 14.5607C3.15804 14.2794 3 13.8978 3 13.5V11.5ZM5 12V13H6V12H5ZM9 12.5C9 12.2348 9.10536 11.9804 9.29289 11.7929C9.48043 11.6054 9.73478 11.5 10 11.5H12C12.2652 11.5 12.5196 11.6054 12.7071 11.7929C12.8946 11.9804 13 12.2348 13 12.5C13 12.7652 12.8946 13.0196 12.7071 13.2071C12.5196 13.3946 12.2652 13.5 12 13.5H10C9.73478 13.5 9.48043 13.3946 9.29289 13.2071C9.10536 13.0196 9 12.7652 9 12.5Z"
          // fill="#393939"
        />
      ) : (
        [...Array(3)].map((_, row) =>
          [...Array(3)].map((_, col) => (
            <circle
              key={`${row}-${col}`}
              cx={5 + col * 7}
              cy={5 + row * 7}
              r={2}
              className="group-hover:fill-black"
            />
          ))
        )
      )}
    </svg>
  );
};

export default DynamicSvg;
